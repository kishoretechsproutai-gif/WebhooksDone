"""
Django settings for Trooba2 project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from celery.schedules import crontab
from datetime import timedelta
from pathlib import Path
import os
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
load_dotenv()
SECRET_KEY = os.getenv('SECRET_KEY')


GEMINI_API_KEY = os.getenv('GEMINI_API_KEY')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
# 'gotrooba.ai','127.0.0.1:8000'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'CoreApplication',
    'corsheaders',
    "rest_framework",
    "rest_framework_simplejwt",
    "django_celery_results",
    "django_celery_beat",
    "InventoryManagement",
    "Testingproject",
    "InventoryAPI",
    "vectordb",
]


MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

ROOT_URLCONF = 'Trooba2.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Trooba2.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases


load_dotenv()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DATABASE_NAME'),
        'USER': os.getenv('DATABASE_USER'),
        'PASSWORD': os.getenv('DATABASE_PASSWORD'),
        'HOST': 'localhost',  # Or the IP address of your MySQL server
        'PORT': '3306',       # The default MySQL port
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": (
        "rest_framework.permissions.IsAuthenticated",
    ),
}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=15),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=30),
}


# Read the Fernet key from env (must be the base64 string you generated)
ENCRYPTION_KEY = os.getenv("ENCRYPTION_KEY")
# os.environ.get("TROOBA_ENC_KEY")
if not ENCRYPTION_KEY:
    raise RuntimeError("TROOBA_ENC_KEY is not set in environment variables.")
# Fernet expects bytes
ENCRYPTION_KEY = ENCRYPTION_KEY.encode()


# ---- Celery (broker = MySQL, results = Django DB) ----
# Change USER/PASS/HOST/DB to your values
CELERY_BROKER_URL = os.getenv("CELERY_BROKER_URL")
CELERY_RESULT_BACKEND = "django-db"

# Celery will import tasks from your views module
CELERY_IMPORTS = ("CoreApplication.views",)   # e.g. "context_api.views"

# (Optional) small safety tweaks
CELERY_TASK_TIME_LIMIT = 60 * 30        # 30 min hard time limit
CELERY_TASK_SOFT_TIME_LIMIT = 60 * 25   # 25 min soft limit
CELERY_WORKER_CONCURRENCY = 2           # adjust for your VPS


load_dotenv()  # This loads the variables from the .env file

# Now you can access the variable like this:
WEBHOOK_BASE_URL = os.getenv("WEBHOOK_BASE_URL")


CELERY_BEAT_SCHEDULE = {
    "fetch-collections-every-day": {
        "task": "CoreApplication.views.fetch_collections_for_all_users",
        "schedule": crontab(minute=0, hour=0),  # runs every day at midnight
    },
    "run-monthly-forecast-on-28th": {
        "task": "CoreApplication.views.run_monthly_forecast",
        # runs on 28th of each month at 00:00
        "schedule": crontab(minute=0, hour=0, day_of_month="28"),
    },
}


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'ERROR',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django-error.log'),
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'ERROR',
            'propagate': True,
        },
    },

}


CELERY_TIMEZONE = 'Asia/Kolkata'
CELERY_ENABLE_UTC = True
